@using OnlineEventsMarketingApp.Common.Constants
@model OnlineEventsMarketingApp.Models.Data.DataSheetViewModel
@{
    ViewBag.Title = "Data Sheet";
    ViewBag.Container = "container-fluid";
    var inHouse = Constants.INHOUSE.ToLower();
    var online = Constants.ONLINE.ToLower();
}

<h2>Data Sheet</h2>

@if (!Model.HasTags)
{
    <div class="alert alert-warning" role="alert">
        This month does not have assigned tags yet.
    </div>
}

@using (Html.BeginForm("DataSheet", "Data", FormMethod.Post, new { enctype = "multipart/form-data", location = "DataSheet", id = "DateSheetForm" }))
{
    @Html.ValidationSummary()
    <div class="row">
        <div class="col-xs-12 col-md-6">
            <div class="col-md-6">
                @Html.DropDownListFor(m => m.Month, Model.Months, new { @class = "form-control t1" })
            </div>
            <div class="col-md-6">
                @Html.DropDownListFor(m => m.Year, Model.Years, new { @class = "form-control t1" })
            </div>
        </div>
        <div class="col-xs-12 col-md-6">
            @if (Model.HasTags)
            {
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.File, new { type = "file", @class = "form-control t1", accept = ".csv" })
                </div>
                <div class="col-md-6">
                    <button class="btn btn-default t1">Import Data</button>
                    @Html.ActionLink("Export Data", "ExportToExcel", new { month = Model.Month, year = Model.Year }, new { @class = "btn btn-success t1 js-export" })
                    <button class="btn btn-danger t1" data-bind="click:clearData">Clear Data</button>
                </div>
            }
        </div>
    </div>
}

<div class="row">
    <div class="col-xs-12">
        <div class="col-md-3 t1">
            <div class="input-group">
                <input type="search" data-bind="value: currentFilter, valueUpdate: 'keyup'" id="search" placeholder="Filter DIS, TE, TM, Area, Type, RND, Status" class="form-control">
                <label class="input-group-addon" for="search"><i class="fa fa-search"></i></label>
            </div>
        </div>
    </div>
</div>

<div class="row t1">
    <div class="col-xs-12">
        <div class="table-wrapper">
            <table class="table t1 table-striped fix-table">
                <thead>
                    <tr>
                        <th width="70">ID</th>
                        <th width="90">DIS</th>
                        <th width="90">TE <span class="hidden-xs">(TM Code)</span></th>
                        <th width="150">TM</th>
                        <th width="150">Area</th>
                        <th width="100">In House</th>
                        <th width="150">RND</th>
                        <th width="120">Date</th>
                        <th width="90">New Users</th>
                        <th width="90">Existing Users</th>
                        <th width="90">Status</th>
                        <th width="90"># Of Patients</th>
                        <th width="100">Tagging</th>
                        <th width="70"></th>
                    </tr>
                </thead>
                <tbody data-bind="foreach: filteredDatasheet">
                    <tr>
                        <td data-bind="text: DataSheetId"></td>
                        <!-- ko if: $root.isAdmin == 'True' -->
                        <td>
                            <input type="number" class="form-control" data-bind="value: DIS" />
                        </td>
                        <!-- /ko -->
                        <!-- ko if: $root.isAdmin == 'False' -->
                        <td data-bind="text: DIS"></td>
                        <!-- /ko -->
                        <!-- ko if: $root.isAdmin == 'True' -->
                        <td>
                            <input type="number" class="form-control" data-bind="value: TE" />
                        </td>
                        <!-- /ko -->
                        <!-- ko if: $root.isAdmin == 'False' -->
                        <td data-bind="text: TE"></td>
                        <!-- /ko -->
                        <!-- ko if: $root.isAdmin == 'True' -->
                        <td>
                            <input type="text" class="form-control" data-bind="value: TM" />
                        </td>
                        <!-- /ko -->
                        <!-- ko if: $root.isAdmin == 'False' -->
                        <td data-bind="text: TM"></td>
                        <!-- /ko -->
                        <!-- ko if: $root.isAdmin == 'True' -->
                        <td>
                            <input type="text" class="form-control" data-bind="value: Area" />
                        </td>
                        <!-- /ko -->
                        <!-- ko if: $root.isAdmin == 'False' -->
                        <td data-bind="text: Area"></td>
                        <!-- /ko -->
                        <!-- ko if: $root.isAdmin == 'True' -->
                        <td data-bind="style: {backgroundColor: (InHouse().toLowerCase() === '@inHouse' || InHouse().toLowerCase() === '@online')  ? '' : '#f8d7da'}">
                            <input type="text" class="form-control" data-bind="value: InHouse" />
                        </td>
                        <!-- /ko -->
                        <!-- ko if: $root.isAdmin == 'False' -->
                        <td data-bind="text: InHouse"></td>
                        <!-- /ko -->
                        <!-- ko if: $root.isAdmin == 'True' -->
                        <td>
                            <input type="text" class="form-control" data-bind="value: Rnd" />
                        </td>
                        <!-- /ko -->
                        <!-- ko if: $root.isAdmin == 'False' -->
                        <td data-bind="text: Rnd"></td>
                        <!-- /ko -->
                        <td data-bind="style: {backgroundColor: $root.dateColor(Date) }">
                            <input class='form-control' data-bind="datePicker: Date" />
                        </td>
                        <td><input class='form-control' data-bind='value: NewUsers' type="number" /></td>
                        <td><input class='form-control' data-bind='value: ExistingUsers' type="number" /></td>
                        <td data-bind="style: {backgroundColor: $root.statusColor(Status) }"><input class='form-control' data-bind="value: Status" autocomplete="on" /></td>
                        <td><input class='form-control' data-bind='value: NoOfPatients' type="number" /></td>
                        <td data-bind="text: Tag.TagName"></td>
                        <td><a href="javascript:void(0)" data-bind="click: function() { $root.Delete($data) }">Delete</a></td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>    
</div>

<div class="row t1">
    <div class="col-md-12">
        <input type="button" value="Submit" class="btn btn-success" data-bind="click: submitChanges, visible: datasheets().length > 0" />
    </div>
</div>

<div class="loading-modal"></div>

@section Scripts {
    <script src="~/Scripts/Data/datasheet.js" type="text/javascript"></script>
    <script src="~/Scripts/datepicker.knockout.js" type="text/javascript"></script>

    <script type="text/javascript">
        var month = $('#Month').val();
        var year = $('#Year').val();

        var viewModel = function() {
            var self = this;
            self.datasheets = ko.observableArray([]);
            self.isAdmin = '@User.IsInRole("Admin")';
            self.currentFilter = ko.observable();

            self.dateColor = function(obj) {
                if (!obj())
                    return '#f8d7da';

                return '';
            }

            self.statusColor = function(obj) {
                if (obj().toLowerCase() === 'run')
                    return '#5cb85c';
                if (!obj())
                    return '#f8d7da';

                return '';
            }

            self.submitChanges = function() {
                showLoading();
                $.ajax({
                    dataType: "json",
                    type: 'POST',
                    url: "/Data/PostDataSheetChanges",
                    data: { month: month, year: year, sheet: ko.toJSON(self.datasheets()) },
                    success: function(returnData) {
                        hideLoading();
                        ko.mapping.fromJS(returnData, {}, self.datasheets);
                        alert('Datasheet has been successfully updated');
                    },
                    error: function(err) {
                        hideLoading();
                        alert('Error submitting the data: ' + err);
                    }
                });
            };

            self.clearData = function() {
                var answer = confirm("WARNING!\nAre you sure you want to clear the data for this month? This will permanently delete all the data for this month.");
                if (answer) {
                    showLoading();
                    $.ajax({
                        dataType: "json",
                        type: 'POST',
                        url: "/Data/ClearData",
                        data: { month: month, year: year },
                        success: function(returnData) {
                            hideLoading();
                            self.datasheets([]);
                        },
                        error: function(err) {
                            hideLoading();
                            alert('Error clearing data: ' + JSON.stringify(err));
                        }
                    });
                }
            }

            self.filteredDatasheet = ko.computed(function() {
                if (!self.currentFilter()) {
                    return self.datasheets();
                } else {
                    var f = self.currentFilter().toLowerCase();
                    var exist = function(obj) {
                        return obj.toString().toLowerCase().indexOf(f) >= 0;
                    };
                    return ko.utils.arrayFilter(self.datasheets(), function(item) {
                        var i = ko.toJS(item);
                        return exist(i.DIS) || exist(i.TE) || exist(i.TM) || exist(i.Area) || exist(i.Rnd) || exist(i.InHouse) || exist(i.Status);
                    });

                }
            });

            self.Delete = function(data) {
                var answer = confirm("Are you sure you want to delete this record?\nThis will permanently delete record");
                if (answer) {
                    
                    showLoading();
                    $.ajax({
                        dataType: 'json',
                        data: { id: data.DataSheetId() },
                        type: 'POST',
                        url: "/Data/DeleteData",
                        success: function () {
                            hideLoading();
                            self.datasheets.remove(data);
                        },
                        error: function (err) {
                            hideLoading();
                            alert('Error getting data: ' + JSON.stringify(err));
                        }
                        
                    });                    
                }
            }

            var args = { month: month, year: year };

            showLoading();
            $.ajax({
                dataType: "json",
                url: "/Data/GetDataSheet",
                data: args,
                success: function(returnData) {
                    hideLoading();
                    ko.mapping.fromJS(returnData, {}, self.datasheets);
                },
                error: function(err) {
                    hideLoading();
                    alert('Error getting data: ' + JSON.stringify(err));
                }
            });
        }

        var datasheetViewModel = new viewModel();
        ko.applyBindings(datasheetViewModel);

        $('table').stickyTableHeaders({ scrollableArea: $('.table-wrapper'), cacheHeaderHeight: true, zIndex: 999 });
    </script>
}
